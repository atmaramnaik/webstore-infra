<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="120">
  <server artifactsdir="artifacts" agentAutoRegisterKey="123456789abcdefgh987654321" webhookSecret="57b5b4a5-e839-4735-935c-168e97b80033" commandRepositoryLocation="default" serverId="239404b7-69fe-4fc9-81e9-945654461562" tokenGenerationKey="cf41059c-dcd2-4e14-8af3-a2013a92629f">
    <backup emailOnSuccess="true" emailOnFailure="true" />
    <security>
      <authConfigs>
        <authConfig id="01116fb0-df22-4bb2-9163-b62228b52b4a" pluginId="cd.go.authentication.passwordfile">
          <property>
            <key>PasswordFilePath</key>
            <value>/etc/htpasswd</value>
          </property>
        </authConfig>
      </authConfigs>
      <roles>
        <role name="readonly">
          <users>
            <user>gocd-webstore-external</user>
          </users>
        </role>
      </roles>
      <admins>
        <user>webstore</user>
      </admins>
    </security>
  </server>
  <elastic>
    <agentProfiles>
      <agentProfile clusterProfileId="docker" id="docker-elastic" pluginId="cd.go.contrib.elastic-agent.docker">
        <property>
          <key>Hosts</key>
          <value />
        </property>
        <property>
          <key>Mounts</key>
          <value>/var/run/docker.sock:/var/run/docker.sock
/var/go/secrets:/var/go/secrets
/gradle/jars:/home/go/.gradle//caches/modules-2/files-2.1:rw,z
/gradle/wrapper:/home/go/.gradle/wrapper:rw,z</value>
        </property>
        <property>
          <key>Command</key>
          <value />
        </property>
        <property>
          <key>Privileged</key>
          <value>true</value>
        </property>
        <property>
          <key>ReservedMemory</key>
          <value />
        </property>
        <property>
          <key>Environment</key>
          <value />
        </property>
        <property>
          <key>Cpus</key>
          <value />
        </property>
        <property>
          <key>Image</key>
          <value>agent:latest</value>
        </property>
        <property>
          <key>MaxMemory</key>
          <value />
        </property>
      </agentProfile>
    </agentProfiles>
    <clusterProfiles>
      <clusterProfile id="docker" pluginId="cd.go.contrib.elastic-agent.docker">
        <property>
          <key>go_server_url</key>
          <value>https://192.168.33.66:8154/go</value>
        </property>
        <property>
          <key>environment_variables</key>
          <value />
        </property>
        <property>
          <key>max_docker_containers</key>
          <value>3</value>
        </property>
        <property>
          <key>docker_uri</key>
          <value>unix:///var/run/docker.sock</value>
        </property>
        <property>
          <key>auto_register_timeout</key>
          <value>3</value>
        </property>
        <property>
          <key>docker_ca_cert</key>
          <value />
        </property>
        <property>
          <key>docker_client_cert</key>
          <value />
        </property>
        <property>
          <key>docker_client_key</key>
          <value />
        </property>
        <property>
          <key>private_registry_server</key>
          <value />
        </property>
        <property>
          <key>private_registry_username</key>
          <value />
        </property>
        <property>
          <key>private_registry_password</key>
          <encryptedValue>AES:D4qFAR7NIO0X3JZSDONuCQ==:pR/DH9bSIezJFeqHCJUwhg==</encryptedValue>
        </property>
        <property>
          <key>enable_private_registry_authentication</key>
          <value>false</value>
        </property>
        <property>
          <key>private_registry_custom_credentials</key>
          <value>true</value>
        </property>
        <property>
          <key>pull_on_container_create</key>
          <value>false</value>
        </property>
      </clusterProfile>
    </clusterProfiles>
  </elastic>
  <config-repos>
  <config-repo pluginId="json.config.plugin" id="pipelines">
    <git url="https://github.com/atmaramnaik/webstore-infra.git" />
    <configuration>
      <property>
        <key>pipeline_pattern</key>
        <value>pipelines/*</value>
      </property>
    </configuration>
  </config-repo>
  </config-repos>
  <pipelines group="build" />
  <pipelines group="Test" />
</cruise>
