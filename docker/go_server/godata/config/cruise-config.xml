<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="120">
  <server artifactsdir="artifacts" agentAutoRegisterKey="123456789abcdefgh987654321" webhookSecret="57b5b4a5-e839-4735-935c-168e97b80033" commandRepositoryLocation="default" serverId="239404b7-69fe-4fc9-81e9-945654461562" tokenGenerationKey="cf41059c-dcd2-4e14-8af3-a2013a92629f">
    <backup emailOnSuccess="true" emailOnFailure="true" />
    <security>
      <authConfigs>
        <authConfig id="01116fb0-df22-4bb2-9163-b62228b52b4a" pluginId="cd.go.authentication.passwordfile">
          <property>
            <key>PasswordFilePath</key>
            <value>/etc/htpasswd</value>
          </property>
        </authConfig>
      </authConfigs>
      <roles>
        <role name="readonly">
          <users>
            <user>gocd-webstore-external</user>
          </users>
        </role>
      </roles>
      <admins>
        <user>webstore</user>
      </admins>
    </security>
  </server>
  <pipelines group="build">
    <pipeline name="registration-service">
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-registration-service.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./gradlew">
                <arg>build</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="./gradlew">
                <arg>buildDocker</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="product-service">
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-product-service.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./gradlew">
                <arg>build</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="./gradlew">
                <arg>buildDocker</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="db">
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-db.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./gradlew">
                <arg>buildDocker</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="ui">
      <environmentvariables>
        <variable name="BUILD_ENV">
          <value>local</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-ui.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="npm">
                <arg>install</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew">
                <arg>buildDocker</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="unifiedapi">
      <environmentvariables>
        <variable name="ENV">
          <value>local</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-unifiedapi.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./gradlew">
                <arg>buildDocker</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Test">
    <pipeline name="functional-tests">
      <environmentvariables>
        <variable name="BASE_URL">
          <value>http://192.168.33.66/ui</value>
        </variable>
        <variable name="DISPLAY">
          <value>:99</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/atmaramnaik/webstore-functional-tests.git" dest="webstore-functional-tests" />
        <pipeline pipelineName="registration-service" stageName="deploy" materialName="registration-service" />
        <pipeline pipelineName="ui" stageName="build" materialName="ui" />
        <pipeline pipelineName="product-service" stageName="deploy" materialName="product-service" />
        <git url="https://github.com/atmaramnaik/webstore-build-support.git" dest="webstore-build-support" materialName="build_support" />
      </materials>
      <stage name="test">
        <jobs>
          <job name="test">
            <tasks>
              <exec command="ls" workingdir="webstore-build-support/docker-compose">
                <arg>-al</arg>
                <runif status="passed" />
              </exec>
              <exec command="docker-compose" workingdir="webstore-build-support">
                <arg>-f</arg>
                <arg>docker-compose/docker-compose.ubuntu.yml</arg>
                <arg>up</arg>
                <arg>-d</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gradlew" workingdir="webstore-functional-tests">
                <arg>clean</arg>
                <arg>test</arg>
                <runif status="passed" />
              </exec>
              <exec command="docker-compose" workingdir="webstore-build-support">
                <arg>-f</arg>
                <arg>docker-compose/docker-compose.ubuntu.yml</arg>
                <arg>stop</arg>
                <runif status="any" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="test" src="webstore-functional-tests/build" dest="reports" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
</cruise>